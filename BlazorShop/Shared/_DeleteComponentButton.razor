<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            @if (IsParentLoading)
            {
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary close" disabled data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn" disabled>Processing...</button>
                </div>
            }
            else
            {
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn" @onclick="()=>DeleteDate(true)">Delete</button>
                </div>
            }

        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsParentLoading { get; set; }
    [Parameter]
    public EventCallback<bool> OnDelete { get; set; }

    private async Task DeleteDate(bool IsConfirmed)
    {
        if (IsConfirmed)
            await OnDelete.InvokeAsync(IsConfirmed);
    }
}
