@page "/category/create"
@page "/category/edit/{id:guid}"

@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    @if (IsLoading)
    {
        <div class="text-center">
            <img src="/images/Bean Eater-1s-200px.gif" />
        </div>
    }
    else
    {
        <div class="col-12">
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                @*             <ValidationSummary/> *@
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group  py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        </div>

    }
</div>

@code {

    [Parameter]
    public Guid Id { get; set; }
    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == Guid.Empty)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Update";
                await LoadCategory();
            }

        }


    }
    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await _categoryRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }
    private async Task UpsertCategory()
    {


        if (Id == Guid.Empty)
        {
            //create
            await _categoryRepository.Create(Category);
            await _jsRuntime.ToastrSuccess("Operation Succesfull");
        }
        else
        {
            //update
            await _categoryRepository.Update(Category);
            await _jsRuntime.ToastrSuccess("Operation Succesfull");
        }
        _navigationManager.NavigateTo("category");
    }
}
