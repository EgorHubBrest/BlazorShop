@page "/"

@inject IProductService _productService

<style>


        .imgContainer img {
            width: 100%;
            min-height: 100%;
        }
</style>
@if (isLoading)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="/images/Load.gif" />
    </div>
}
else
{
    <div class="container">
        <div class="row pb-3 pt-3 backgroundWhite">
            @foreach (var category in Prodcuts.Select(u => u.Category.Name).Distinct())
            {
                <h2 class="text-success pl-1"><b>@category</b></h2>
                @foreach (var product in Prodcuts.Where(u => u.Category.Name == category))
                {
                    <div class="col-lg-4 col-md-6 pb-4 filter">
                        <div class="card bg-white rounded shadow-sw" style="border:1px solid #222">
                            <div class="card-body pb-1 row">
                                <div class="col-8 h5">@product.Name</div>
                                <div class="col-4 text-end"><span class="text-info h4">
                                    @product.ProductPrices.OrderBy(u=>u.Price).FirstOrDefault()?.Price.ToString("c")
                                </span></div>
                            </div>

                            <img style="max-width:400px;height:500px;" class="mgContainer card-img-top img-fluid d-block m-auto mb-3" src="@product.ImageUrl" alt="menuitem image" />
                            <div class="card-body pb-1 px-3 row">
                                <div class="col-6">
                                    <span class="badge p-2 border w-100 text-dark bg-warning">@product.Category.Name</span>
                                </div>
                                <div class="col-6 border-0">
                                    <span class="badge p-2 border w-100 bg-info">@product.Color</span>
                                </div>
                                <div class="col-12 pt-2" style="font-size:13px; text-align:justify">
                                    <p>@((MarkupString)product.Description)</p>
                                </div>
                                <div class="col-12 p-1">
                                    <a href="/details/@product.Id" class="btn btn-dark form-control btn-sm p-2" style="height:40px">View Details</a>
                                </div>
                            </div>
                        </div>
                            </div>



                }
            }
        </div>
    </div>
}




@code {
    public bool isLoading { get; set; } = true;
    public IEnumerable<ProductDTO> Prodcuts = new List<ProductDTO>();

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        Prodcuts = await _productService.GetAll();
        isLoading = false;
    }
}